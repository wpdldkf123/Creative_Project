<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 조회를 위한 매퍼-->
<mapper namespace="mapper.playlandMapper">
    <resultMap id="playland" type="persistence.dto.playLandDTO">
        <result property="id" column="spot_id"></result>
        <result property="name" column="name"></result>
        <result property="address" column="address"></result>
        <result property="score" column="rate"></result>
        <result property="review" column="content"></result>
        <result property="reviewCount" column="cnt"></result>
    </resultMap>
    <select id="selectPlayland" resultMap="playland" resultType="String">
        SELECT
        pl.spot_id,
        pl.name,
        pl.address,
        rv.content,
        ROUND((SELECT AVG(rate) FROM review WHERE spot_id = pl.spot_id), 1) AS rate,
        (SELECT COUNT(review_id) FROM review WHERE spot_id = pl.spot_id) as cnt
        FROM
        play_land pl
        LEFT JOIN (
        SELECT
        spot_id,
        rate,
        content
        FROM
        review
        WHERE
        (spot_id, review_date) IN (
        SELECT
        spot_id,
        MAX(review_date)
        FROM
        review
        GROUP BY
        spot_id
        )
        ) rv ON pl.spot_id = rv.spot_id
        <where>
            <if test="state != null">
                AND address LIKE CONCAT('%', #{state}, '%')
            </if>
            <if test="city != null">
                AND address LIKE CONCAT('%', #{city}, '%')
            </if>
            <if test="name != null">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
        </where>
    </select>
    <select id="selectModify" resultMap="playland" resultType="String">
        SELECT pl.spot_id, pl.name, pl.address
        FROM play_land pl
        LEFT JOIN (
        SELECT spot_id,  content
        FROM review
        WHERE (spot_id, review_date) IN (
        SELECT spot_id, MAX(review_date)
        FROM review
        GROUP BY spot_id)
        ) rv ON pl.spot_id = rv.spot_id
        <where>
            <if test="state != null">
                AND address LIKE CONCAT('%', #{state}, '%')
            </if>
            <if test="city != null">
                AND address LIKE CONCAT('%', #{city}, '%')
            </if>
            <if test="name != null">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
        </where>
    </select>

    <resultMap id="searched_playland" type="persistence.dto.playLandDTO">
        <result property="id" column="spot_id"></result>
        <result property="name" column="name"></result>
        <result property="address" column="address"></result>
    </resultMap>

    <select id="searchPlayland" resultMap="searched_playland" resultType="String">
        SELECT * FROM outdoorgram.play_land
        WHERE address LIKE #{state} AND address LIKE #{city};
    </select>

    <select id="select_by_id" resultMap="searched_playland" resultType="String">
        SELECT * FROM outdoorgram.play_land WHERE spot_id = #{id};
    </select>


    <insert id="insertPlayLand">
        INSERT INTO `outdoorgram`.`play_land`
            (`name`, `address`, `sort`)
        VALUES
            (  #{name}, #{address},#{sort})
    </insert>
    <resultMap id="realPlayLand" type="persistence.dto.playLandDTO">
        <result property="sort" column="sort"></result>
        <result property="name" column="name"></result>
        <result property="address" column="address"></result>
    </resultMap>
    <select id="selectSpotId"  resultType="java.lang.Integer">
        SELECT spot_id
        FROM `outdoorgram`.`play_land`
        WHERE name = #{name} AND sort = #{sort} AND address = #{address}
        LIMIT 0,1
    </select>

    <select id="selectSpotBySpotId" resultMap="realPlayLand" resultType="foodDTO">
        SELECT * FROM `outdoorgram`.`play_land` WHERE spot_id  = #{spot_id}
    </select>

    <select id="countSpotRow" resultType="java.lang.Integer">
        SELECT COUNT(*)  FROM outdoorgram.play_land
    </select>
    <update id="updatePlayLand" parameterType="playLandDTO">
        UPDATE play_land
        SET sort = #{sort},
            address = #{address},
            name = #{name}
        WHERE spot_id = #{id}
    </update>

    <delete id="deletePlayland" parameterType="java.lang.Integer" >
        DELETE FROM play_land
        WHERE spot_id = #{id}
    </delete>

</mapper>